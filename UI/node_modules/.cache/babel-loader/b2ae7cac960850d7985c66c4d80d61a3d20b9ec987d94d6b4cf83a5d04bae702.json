{"ast":null,"code":"var _jsxFileName = \"D:\\\\MonkeyType\\\\frontend\\\\src\\\\components\\\\TypingTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst paragraph = \"This is a sample paragraph to test your typing skills. Type accurately and fast to get a good score!\";\nconst TypingTest = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(15); // or 30 seconds based on user selection\n  const [input, setInput] = useState('');\n  const [started, setStarted] = useState(false);\n  const [wpm, setWpm] = useState(0);\n  const [accuracy, setAccuracy] = useState(100);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    if (started && timeLeft > 0) {\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else if (timeLeft === 0) {\n      // calculate results and post session data\n      calculateResults();\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [timeLeft, started]);\n  const startTest = () => {\n    setStarted(true);\n    setTimeLeft(15); // or 30\n  };\n  const calculateResults = () => {\n    const wordsTyped = input.trim().split(/\\s+/).length;\n    const minutes = (15 - timeLeft) / 60;\n    const calculatedWPM = minutes > 0 ? Math.round(wordsTyped / minutes) : 0;\n    setWpm(calculatedWPM);\n\n    // Simple accuracy calculation (you can refine this logic)\n    const correctChars = paragraph.split('').filter((char, index) => input[index] === char).length;\n    const calcAccuracy = Math.round(correctChars / paragraph.length * 100);\n    setAccuracy(calcAccuracy);\n\n    // Save session via API call (assumes user is authenticated and token is set)\n    axios.post('http://localhost:5000/api/sessions', {\n      wpm: calculatedWPM,\n      accuracy: calcAccuracy,\n      totalErrors: paragraph.length - correctChars,\n      errorWords: [] // Process to extract error words if needed\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => console.log(res.data)).catch(err => console.error(err));\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Typing Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !started && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTest,\n      children: \"Start Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this), started && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: handleChange,\n        placeholder: \"Start typing...\",\n        rows: 5,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), timeLeft === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"WPM: \", wpm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Accuracy: \", accuracy, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingTest, \"6Q6RZpx0AdeTxEuBBPX0XHNI4K4=\");\n_c = TypingTest;\nexport default TypingTest;\nvar _c;\n$RefreshReg$(_c, \"TypingTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","paragraph","TypingTest","_s","timeLeft","setTimeLeft","input","setInput","started","setStarted","wpm","setWpm","accuracy","setAccuracy","timerRef","current","setTimeout","calculateResults","clearTimeout","startTest","wordsTyped","trim","split","length","minutes","calculatedWPM","Math","round","correctChars","filter","char","index","calcAccuracy","post","totalErrors","errorWords","headers","Authorization","localStorage","getItem","then","res","console","log","data","catch","err","error","handleChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["D:/MonkeyType/frontend/src/components/TypingTest.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst paragraph = \"This is a sample paragraph to test your typing skills. Type accurately and fast to get a good score!\";\r\n\r\nconst TypingTest = () => {\r\n  const [timeLeft, setTimeLeft] = useState(15); // or 30 seconds based on user selection\r\n  const [input, setInput] = useState('');\r\n  const [started, setStarted] = useState(false);\r\n  const [wpm, setWpm] = useState(0);\r\n  const [accuracy, setAccuracy] = useState(100);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (started && timeLeft > 0) {\r\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    } else if (timeLeft === 0) {\r\n      // calculate results and post session data\r\n      calculateResults();\r\n    }\r\n    return () => clearTimeout(timerRef.current);\r\n  }, [timeLeft, started]);\r\n\r\n  const startTest = () => {\r\n    setStarted(true);\r\n    setTimeLeft(15); // or 30\r\n  };\r\n\r\n  const calculateResults = () => {\r\n    const wordsTyped = input.trim().split(/\\s+/).length;\r\n    const minutes = (15 - timeLeft) / 60;\r\n    const calculatedWPM = minutes > 0 ? Math.round(wordsTyped / minutes) : 0;\r\n    setWpm(calculatedWPM);\r\n\r\n    // Simple accuracy calculation (you can refine this logic)\r\n    const correctChars = paragraph.split('').filter((char, index) => input[index] === char).length;\r\n    const calcAccuracy = Math.round((correctChars / paragraph.length) * 100);\r\n    setAccuracy(calcAccuracy);\r\n\r\n    // Save session via API call (assumes user is authenticated and token is set)\r\n    axios.post('http://localhost:5000/api/sessions', {\r\n      wpm: calculatedWPM,\r\n      accuracy: calcAccuracy,\r\n      totalErrors: paragraph.length - correctChars,\r\n      errorWords: [] // Process to extract error words if needed\r\n    }, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    }).then(res => console.log(res.data))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Typing Test</h2>\r\n      {!started && <button onClick={startTest}>Start Test</button>}\r\n      {started && (\r\n        <div>\r\n          <p>{paragraph}</p>\r\n          <textarea\r\n            value={input}\r\n            onChange={handleChange}\r\n            placeholder=\"Start typing...\"\r\n            rows={5}\r\n            cols={50}\r\n          />\r\n          <div>Time Left: {timeLeft}s</div>\r\n        </div>\r\n      )}\r\n      {timeLeft === 0 && (\r\n        <div>\r\n          <h3>Results</h3>\r\n          <p>WPM: {wpm}</p>\r\n          <p>Accuracy: {accuracy}%</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}